// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc2421.Window.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2421.Window.Robot;
/**
 *
 */
public class  blowUp extends Command {
    final int ejectorPower=1;
    boolean fin = false;
    public blowUp() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.windows);
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        if (Robot.windows.isBackPressed() == true){
            Robot.windows.setX(-0.1);
        }
        else{
            while(Robot.windows.isBackPressed() == false){
                Robot.windows.setX(-0.1);
            }
        }
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        while(!fin){
            if(Robot.windows.isFrontPressed()==false){
                fin = true;
            }
            Robot.windows.setX(ejectorPower);
        }
        fin = false;
        while (!fin){    
        
            if (Robot.windows.isBackPressed()== false){
                fin = true; 
            }
            Robot.windows.setX(-ejectorPower);
        }
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return fin;
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.windows.setX(0);
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        Robot.windows.setX(0);
    }
}
