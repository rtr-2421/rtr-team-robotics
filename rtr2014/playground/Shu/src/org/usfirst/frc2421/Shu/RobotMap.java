// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2421.Shu;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar driveleftDrive;
    public static CANJaguar driverightDrive;
    public static DigitalInput driveleftWheelSpeed;
    public static DigitalInput driverightWheelSpeed;
    public static CANJaguar bigFireLeverMotorpowerMotor;
    public static CANJaguar bigFireLeverMotorpowerMotor2;
    public static DigitalInput bigFireLeverMotorfireResetTest;
    public static Compressor bigFireLeverPneumaticsCompressor1;
    public static Relay bigFireLeverPneumaticsRelaySolenoid1;
    public static Relay bigFireLeverPneumaticsengageDisengageFire;
    public static DigitalInput bigFireLeverPneumaticsfireResetTest;
    public static CANJaguar bigFireLeverSpringleverReset;
    public static DigitalInput bigFireLeverSpringfireResetTest;
    public static Relay pneumaticClawleftClaw;
    public static Relay pneumaticClawrightClaw;
    public static Relay pneumaticClawclawUpDown;
    public static Relay pneumaticClawleftClawSpike;
    public static Relay pneumaticClawrightClawSpike;
    public static Relay pneumaticClawelevationSpike;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        try { 
            driveleftDrive = new CANJaguar(6);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            driverightDrive = new CANJaguar(3);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        driveleftWheelSpeed = new DigitalInput(1, 1);
	LiveWindow.addSensor("Drive", "leftWheelSpeed", driveleftWheelSpeed);
        
        driverightWheelSpeed = new DigitalInput(1, 2);
	LiveWindow.addSensor("Drive", "rightWheelSpeed", driverightWheelSpeed);
        
        try { 
            bigFireLeverMotorpowerMotor = new CANJaguar(4);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            bigFireLeverMotorpowerMotor2 = new CANJaguar(5);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        bigFireLeverMotorfireResetTest = new DigitalInput(1, 4);
	LiveWindow.addSensor("BigFireLeverMotor", "fireResetTest", bigFireLeverMotorfireResetTest);
        
        bigFireLeverPneumaticsCompressor1 = new Compressor(1, 3, 1, 2);
	
        
        bigFireLeverPneumaticsRelaySolenoid1 = new Relay(1, 1);
	LiveWindow.addActuator("BigFireLeverPneumatics", "Relay Solenoid 1", bigFireLeverPneumaticsRelaySolenoid1);
        
        bigFireLeverPneumaticsengageDisengageFire = new Relay(1, 3);
	LiveWindow.addActuator("BigFireLeverPneumatics", "engageDisengageFire", bigFireLeverPneumaticsengageDisengageFire);
        
        bigFireLeverPneumaticsfireResetTest = new DigitalInput(1, 5);
	LiveWindow.addSensor("BigFireLeverPneumatics", "fireResetTest", bigFireLeverPneumaticsfireResetTest);
        
        try { 
            bigFireLeverSpringleverReset = new CANJaguar(2);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        bigFireLeverSpringfireResetTest = new DigitalInput(1, 6);
	LiveWindow.addSensor("BigFireLeverSpring", "fireResetTest", bigFireLeverSpringfireResetTest);
        
        pneumaticClawleftClaw = new Relay(1, 4);
	LiveWindow.addActuator("PneumaticClaw", "leftClaw", pneumaticClawleftClaw);
        
        pneumaticClawrightClaw = new Relay(1, 5);
	LiveWindow.addActuator("PneumaticClaw", "rightClaw", pneumaticClawrightClaw);
        
        pneumaticClawclawUpDown = new Relay(1, 6);
	LiveWindow.addActuator("PneumaticClaw", "clawUpDown", pneumaticClawclawUpDown);
        
        pneumaticClawleftClawSpike = new Relay(1, 7);
	LiveWindow.addActuator("PneumaticClaw", "leftClawSpike", pneumaticClawleftClawSpike);
        
        pneumaticClawrightClawSpike = new Relay(1, 8);
	LiveWindow.addActuator("PneumaticClaw", "rightClawSpike", pneumaticClawrightClawSpike);
        
        pneumaticClawelevationSpike = new Relay(2, 1);
	LiveWindow.addActuator("PneumaticClaw", "elevationSpike", pneumaticClawelevationSpike);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
