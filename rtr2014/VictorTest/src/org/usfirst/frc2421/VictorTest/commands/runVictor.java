// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2421.VictorTest.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2421.VictorTest.Robot;
import org.usfirst.frc2421.VictorTest.RobotMap;

/**
 *
 */
public class  runVictor extends Command {

    private boolean finished = false;
    private boolean hasEjected = false;
    
    public runVictor() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.ballEject);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    // Called just before this Command runs the first time
    protected void initialize() {
        
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        ejectBall();
    }
    
    public void ejectBall(){
        System.out.print("The code is running the method");
        if(!hasEjected){
            
            System.out.print("It realizes it has not launched");
            if(RobotMap.reset.get()){
                System.out.print("The code has sent the voltage");
                Robot.ballEject.EjectArm(1);
            }
            else if(!RobotMap.reset.get()){
                Robot.ballEject.EjectArm(1);
            }
        
            if(RobotMap.ejected.get())
                Robot.ballEject.stopArm();
        
        }
        
        else{
            
            if(RobotMap.ejected.get()){
                Robot.ballEject.EjectArm(-1);
            }
            else if(!RobotMap.ejected.get()){
                Robot.ballEject.EjectArm(-1);
            }
            
            if(RobotMap.reset.get()){
                Robot.ballEject.stopArm();
                finished = true;
            }
        }
        
    }
//    public void resetEjector(){
//        if(!RobotMap.reset.get())
//        Robot.ballEject.EjectArm(1);
//        
//    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return finished;
    }

    // Called once after isFinished returns true
    protected void end() {
        Robot.ballEject.stopArm();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        finished = true;
        isFinished();
    }
}
