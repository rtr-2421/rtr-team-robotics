// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2421.TankPID.subsystems;

import org.usfirst.frc2421.TankPID.PIDJaguar;
import org.usfirst.frc2421.TankPID.RobotMap;
import org.usfirst.frc2421.TankPID.commands.*;

import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.can.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Drive extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public CANJaguar jag1 = RobotMap.drivejag1;
    public CANJaguar jag2 = RobotMap.drivejag2;
    public CANJaguar jag3 = RobotMap.drivejag3;
    public CANJaguar jag4 = RobotMap.drivejag4;
    Encoder enc1 = RobotMap.driveenc1;
    Encoder enc2 = RobotMap.driveenc2;
    Encoder enc3 = RobotMap.driveenc3;
    Encoder enc4 = RobotMap.driveenc4;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public double kP = 0.001;
    public double kI = 0;
    public double kD = 0.001;
    
    double scale1 = -80;
    double scale2 = -80;
    double scale3 = -80;
    double scale4 = -80;

    public PIDController pid1 = new PIDController(kP, kI, kD, enc1, new PIDJaguar(jag1));
    public PIDController pid2 = new PIDController(kP, kI, kD, enc2, new PIDJaguar(jag2));
    public PIDController pid3 = new PIDController(kP, kI, kD, enc3, new PIDJaguar(jag3));
    public PIDController pid4 = new PIDController(kP, kI, kD, enc4, new PIDJaguar(jag4));
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public void pidEnable(){
    	pid1.setInputRange(scale1, -scale1);
    	pid2.setInputRange(scale2, -scale2);
    	pid3.setInputRange(scale3, -scale3);
    	pid4.setInputRange(scale4, -scale4);
    	
    	pid1.setOutputRange(-1, 1);
    	pid2.setOutputRange(-1, 1);
    	pid3.setOutputRange(-1, 1);
    	pid4.setOutputRange(-1, 1);
    	
    	pid1.enable();
    	pid2.enable();
    	pid3.enable();
    	pid4.enable();
    }
    
    public void leftSpeed(double speed){
    	pid1.setSetpoint(speed*scale1);
    	pid3.setSetpoint(speed*scale3);
    }
    
    public void rightSpeed(double speed){
    	pid2.setSetpoint(speed*scale2);
    	pid4.setSetpoint(speed*scale4);
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}

