// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2421.Dalek;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar driveleftDrive;
    public static CANJaguar driverightDrive;
    public static CANJaguar eye_StalkeyeStalkJag;
    public static DigitalInput eye_StalkeyeTop;
    public static DigitalInput eye_StalkeyeBottom;
    public static CANJaguar left_ArmleftArmJag;
    public static DigitalInput left_ArmleftTop;
    public static DigitalInput left_ArmleftBottom;
    public static CANJaguar right_ArmrightArmJag;
    public static DigitalInput right_ArmrightTop;
    public static DigitalInput right_ArmrightBottom;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        try { 
            driveleftDrive = new CANJaguar(2);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            driverightDrive = new CANJaguar(3);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            eye_StalkeyeStalkJag = new CANJaguar(4);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        eye_StalkeyeTop = new DigitalInput(1, 2);
	LiveWindow.addSensor("Eye_Stalk", "eyeTop", eye_StalkeyeTop);
        
        eye_StalkeyeBottom = new DigitalInput(1, 3);
	LiveWindow.addSensor("Eye_Stalk", "eyeBottom", eye_StalkeyeBottom);
        
        try { 
            left_ArmleftArmJag = new CANJaguar(5);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        left_ArmleftTop = new DigitalInput(1, 4);
	LiveWindow.addSensor("Left_Arm", "leftTop", left_ArmleftTop);
        
        left_ArmleftBottom = new DigitalInput(1, 5);
	LiveWindow.addSensor("Left_Arm", "leftBottom", left_ArmleftBottom);
        
        try { 
            right_ArmrightArmJag = new CANJaguar(6);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        right_ArmrightTop = new DigitalInput(1, 6);
	LiveWindow.addSensor("Right_Arm", "rightTop", right_ArmrightTop);
        
        right_ArmrightBottom = new DigitalInput(1, 7);
	LiveWindow.addSensor("Right_Arm", "rightBottom", right_ArmrightBottom);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
